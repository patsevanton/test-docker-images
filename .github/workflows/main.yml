name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Get current tag
      id: get_tag
      run: |
        if git describe --tags --abbrev=0 > /dev/null 2>&1; then
          CURRENT_TAG=$(git describe --tags --abbrev=0)
          echo "Current tag: $CURRENT_TAG"
          echo "::set-output name=current_tag::$CURRENT_TAG"
        else
          echo "No tag found"
          echo "::set-output name=current_tag::"
        fi

    - name: Create or increment tag
      id: create_tag
      run: |
        if [ -z "${{ steps.get_tag.outputs.current_tag }}" ]; then
          NEW_TAG="1"
        else
          CURRENT_TAG=${{ steps.get_tag.outputs.current_tag }}
          NEW_TAG=$((CURRENT_TAG + 1))
        fi
        echo "New tag: $NEW_TAG"
        echo "::set-output name=new_tag::$NEW_TAG"

    - name: Create new tag
      run: |
        git tag ${{ steps.create_tag.outputs.new_tag }}
        git push origin ${{ steps.create_tag.outputs.new_tag }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.BUILD_PUSH_TEST_MULTIPLE_DOCKER_IMAGES_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/my-go-app:${{ steps.create_tag.outputs.new_tag }}
